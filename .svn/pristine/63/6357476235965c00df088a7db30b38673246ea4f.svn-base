<?xml version="1.0" encoding="UTF-8"?> 
 <!DOCTYPE sqlMap PUBLIC "//iBATIS.com//DTD SQL Map 2.0//EN" "HTTP://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="Rpm">
	<typeAlias alias="RpmVO" type="pmcg.fcn.domain.RpmVO" />

	<resultMap id="mapComplexQuerySimple" class="RpmVO">
		<result property="iddrpm" column="iddrpm" />
		<result property="pmarpm" column="pmarpm" />
		<result property="esprpm" column="esprpm" />
		<result property="tesrpm" column="tesrpm" />
		<result property="datrpm" column="datrpm" />
		<result property="numrpm" column="numrpm" />
		<result property="usualt" column="usualt" />
		<result property="datalt" column="datalt" />
		<result property="lmarpm" column="lmarpm" />
		<result property="arerpm" column="arerpm" />
		<result property="caprpm" column="caprpm" />
		<result property="latrpm" column="latrpm" />
		<result property="lonrpm" column="lonrpm" />
		<result property="arerpmStr" column="arerpmstr" />
	</resultMap>

	<resultMap id="mapComplexQuery" class="RpmVO">
		<result property="iddrpm" column="iddrpm" />
		<result property="pmarpm" column="pmarpm" />
		<result property="esprpm" column="esprpm" />
		<result property="tesrpm" column="tesrpm" />
		<result property="datrpm" column="datrpm" />
		<result property="numrpm" column="numrpm" />
		<result property="usualt" column="usualt" />
		<result property="datalt" column="datalt" />
		<result property="lmarpm" column="lmarpm" />
		<result property="arerpm" column="arerpm" />
		<result property="caprpm" column="caprpm" />
		<result property="latrpm" column="latrpm" />
		<result property="lonrpm" column="lonrpm" />
		<result property="arerpmStr" column="arerpmstr" />
		
		<result property="lmaVO" select="Lma.getRegByCod" column="lmarpm" />
	</resultMap>

	<select id="getRegByCod" parameterClass="Long" resultMap="mapComplexQuerySimple">
		SELECT r.*, replace(cast (r.arerpm as character varying),'.',',') as arerpmstr
		FROM lic.licrpm r
		WHERE iddrpm = #value:NUMERIC#
	</select>

	<select id="getRegByCodComplex" parameterClass="Long" resultMap="mapComplexQuery">
		SELECT r.*, replace(cast (r.arerpm as character varying),'.',',') as arerpmstr
		FROM lic.licrpm r
		WHERE iddrpm = #value:NUMERIC#
	</select>

	<select id="getRegByCriterio" parameterClass="RpmVO" resultMap="mapComplexQuerySimple">
		SELECT r.*, replace(cast (r.arerpm as character varying),'.',',') as arerpmstr
		FROM lic.licrpm r
		<dynamic prepend=" WHERE ">
			<isNotNull property="iddrpm" prepend=" AND ">
				iddrpm = #iddrpm:NUMERIC#
			</isNotNull>
			<isNotNull property="pmarpm" prepend=" AND ">
				pmarpm = #pmarpm:NUMERIC#
			</isNotNull>
			<isNotNull property="esprpm" prepend=" AND ">
				esprpm ILIKE '%' || #esprpm:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="tesrpm" prepend=" AND ">
				tesrpm ILIKE '%' || #tesrpm:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="datrpm" prepend=" AND "> to_char(datrpm,'dd/MM/yyyy') =
				to_char(#datrpm:TIMESTAMP#,'dd/MM/yyyy')
			</isNotNull>
			<isNotNull property="numrpm" prepend=" AND ">
				numrpm = #numrpm:NUMERIC#
			</isNotNull>
			<isNotNull property="usualt" prepend=" AND ">
				usualt ILIKE '%' || #usualt:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="datalt" prepend=" AND "> to_char(datalt,'dd/MM/yyyy') =
				to_char(#datalt:TIMESTAMP#,'dd/MM/yyyy')
			</isNotNull>
		</dynamic>
	</select>

	<select id="getRegByCriterioComplex" parameterClass="RpmVO" resultMap="mapComplexQuery">
		SELECT r.*, replace(cast (r.arerpm as character varying),'.',',') as arerpmstr
		FROM lic.licrpm r
		<dynamic prepend=" WHERE ">
			<isNotNull property="iddrpm" prepend=" AND "> iddrpm = #iddrpm:NUMERIC#
			</isNotNull>
			<isNotNull property="pmarpm" prepend=" AND "> pmarpm = #pmarpm:NUMERIC#
			</isNotNull>
			<isNotNull property="esprpm" prepend=" AND ">
				esprpm ILIKE '%' || #esprpm:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="tesrpm" prepend=" AND ">
				tesrpm ILIKE '%' || #tesrpm:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="datrpm" prepend=" AND "> to_char(datrpm,'dd/MM/yyyy') =
				to_char(#datrpm:TIMESTAMP#,'dd/MM/yyyy')
			</isNotNull>
			<isNotNull property="numrpm" prepend=" AND "> numrpm = #numrpm:NUMERIC#
			</isNotNull>
			<isNotNull property="usualt" prepend=" AND ">
				usualt ILIKE '%' || #usualt:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="datalt" prepend=" AND "> to_char(datalt,'dd/MM/yyyy') =
				to_char(#datalt:TIMESTAMP#,'dd/MM/yyyy')
			</isNotNull>
		</dynamic>
	</select>

	<select id="getTodos" resultMap="mapComplexQuerySimple">
		SELECT r.*, replace(cast (r.arerpm as character varying),'.',',') as arerpmstr
		FROM lic.licrpm r
	</select>

	<insert id="insReg" parameterClass="RpmVO">
		<selectKey keyProperty="iddrpm" resultClass="Long">
			SELECT NEXTVAL('lic.seqrpm')
		</selectKey>
		INSERT INTO lic.licrpm(iddrpm,pmarpm,esprpm,tesrpm,datrpm,numrpm,usualt,datalt,lmarpm,arerpm,caprpm,latrpm,lonrpm) VALUES
		(#iddrpm:NUMERIC#,
		#pmarpm:NUMERIC#, 
		UPPER(#esprpm:VARCHAR#),
		UPPER(#tesrpm:VARCHAR#),
		#datrpm:TIMESTAMP#,
		(select coalesce(max(NUMRPM + 1),1) AS PROX_NUMRPM from lic.licrpm r where to_char(r.datrpm,'MM/yyyy') = to_char(now(),'MM/yyyy')),
		UPPER(#usualt:VARCHAR#),
		now(),
		#lmarpm:NUMERIC#,
		#arerpm:NUMERIC#,UPPER(#caprpm:VARCHAR#),UPPER(#latrpm:VARCHAR#),UPPER(#lonrpm:VARCHAR#) )
	</insert>

	<update id="updRegByCod" parameterClass="RpmVO">
		UPDATE 
			lic.licrpm 
		SET 
			pmarpm = #pmarpm:NUMERIC#,
			esprpm = UPPER(#esprpm:VARCHAR#),
			tesrpm = UPPER(#tesrpm:VARCHAR#),
			datrpm =	#datrpm:TIMESTAMP#,
			numrpm = #numrpm:NUMERIC#,
			usualt = UPPER(#usualt:VARCHAR#),
			datalt = now(),
			lmarpm = #lmarpm:NUMERIC#,
			arerpm = #arerpm:NUMERIC#,
			caprpm = UPPER(#caprpm:VARCHAR#),
			latrpm = UPPER(#latrpm:VARCHAR#),
			lonrpm = UPPER(#lonrpm:VARCHAR#)
		WHERE 
			iddrpm = #iddrpm:NUMERIC#
	</update>
	
	<delete id="delByCod" parameterClass="Long">
		DELETE FROM lic.licrpm WHERE iddrpm = #value:NUMERIC#
	</delete>
	
	<delete id="delByCodigos" parameterClass="String">
		DELETE FROM lic.licrpm WHERE iddrpm in ($value$)
	</delete>

	<select id="getCountByCriterio" parameterClass="RpmVO" resultClass="Integer">
		SELECT count(iddrpm) FROM lic.licrpm
		<dynamic prepend=" WHERE ">
			<isNotNull property="iddrpm" prepend=" AND "> iddrpm = #iddrpm:NUMERIC#
			</isNotNull>
			<isNotNull property="pmarpm" prepend=" AND "> pmarpm = #pmarpm:NUMERIC#
			</isNotNull>
			<isNotNull property="esprpm" prepend=" AND ">
				esprpm ILIKE '%' || #esprpm:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="tesrpm" prepend=" AND ">
				tesrpm ILIKE '%' || #tesrpm:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="datrpm" prepend=" AND "> to_char(datrpm,'dd/MM/yyyy') =
				to_char(#datrpm:TIMESTAMP#,'dd/MM/yyyy')
			</isNotNull>
			<isNotNull property="numrpm" prepend=" AND "> numrpm = #numrpm:NUMERIC#
			</isNotNull>
			<isNotNull property="usualt" prepend=" AND ">
				usualt ILIKE '%' || #usualt:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="datalt" prepend=" AND "> to_char(datalt,'dd/MM/yyyy') =
				to_char(#datalt:TIMESTAMP#,'dd/MM/yyyy')
			</isNotNull>
		</dynamic>
	</select>
	
	<select id="getRegByProcesso" resultMap="mapComplexQuery">
		SELECT r.*, replace(cast (r.arerpm as character varying),'.',',') as arerpmstr
		FROM lic.licrpm r
		where r.pmarpm = #pmarpm:NUMERIC#
	</select>
</sqlMap> 
 