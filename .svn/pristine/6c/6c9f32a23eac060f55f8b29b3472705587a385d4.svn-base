<?xml version="1.0" encoding="UTF-8"?> 
 <!DOCTYPE sqlMap PUBLIC "//iBATIS.com//DTD SQL Map 2.0//EN" "HTTP://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="Cfg">
	<typeAlias alias="CfgVO" type="pmcg.fcn.domain.CfgVO" />

	<resultMap id="mapComplexQuerySimple" class="CfgVO">
		<result property="iddcfg" column="iddcfg" />
		<result property="parcfg" column="parcfg" />
		<result property="valcfg" column="valcfg" />
		<result property="descfg" column="descfg" />
	</resultMap>

	<resultMap id="mapComplexQuery" class="CfgVO">
		<result property="iddcfg" column="iddcfg" />
		<result property="parcfg" column="parcfg" />
		<result property="valcfg" column="valcfg" />
		<result property="descfg" column="descfg" />
	</resultMap>

	<select id="getRegByCod" parameterClass="Long" resultMap="mapComplexQuerySimple">
		SELECT * FROM fcn.fcncfg WHERE iddcfg = #value:NUMERIC#
	</select>

	<select id="getRegByCodComplex" parameterClass="Long" resultMap="mapComplexQuery">
		SELECT * FROM fcn.fcncfg WHERE iddcfg = #value:NUMERIC#
	</select>

	<select id="getRegByCriterio" parameterClass="CfgVO" resultMap="mapComplexQuerySimple">
		SELECT * FROM fcn.fcncfg
		<dynamic prepend=" WHERE ">
			<isNotNull property="iddcfg" prepend=" AND ">
				iddcfg = #iddcfg:NUMERIC#
			</isNotNull>
			<isNotNull property="parcfg" prepend=" AND ">
				parcfg ILIKE '%' || #parcfg:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="valcfg" prepend=" AND ">
				valcfg ILIKE '%' || #valcfg:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="descfg" prepend=" AND ">
				descfg ILIKE '%' || #descfg:VARCHAR# || '%'
			</isNotNull>
		</dynamic>
	</select>

	<select id="getRegByCriterioComplex" parameterClass="CfgVO" resultMap="mapComplexQuery">
		SELECT * FROM fcn.fcncfg
		<dynamic prepend=" WHERE ">
			<isNotNull property="iddcfg" prepend=" AND "> iddcfg = #iddcfg:NUMERIC#
			</isNotNull>
			<isNotNull property="parcfg" prepend=" AND ">
				parcfg ILIKE '%' || #parcfg:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="valcfg" prepend=" AND ">
				valcfg ILIKE '%' || #valcfg:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="descfg" prepend=" AND ">
				descfg ILIKE '%' || #descfg:VARCHAR# || '%'
			</isNotNull>
		</dynamic>
	</select>

	<select id="getTodos" resultMap="mapComplexQuerySimple">
		SELECT * FROM fcn.fcncfg
	</select>

	<insert id="insReg" parameterClass="CfgVO">
		<selectKey keyProperty="iddcfg" resultClass="Long">
			SELECT NEXTVAL('fcn.seqcfg')
		</selectKey>
		INSERT INTO fcn.fcncfg(iddcfg,parcfg,valcfg,descfg) VALUES (#iddcfg:NUMERIC#, UPPER(#parcfg:VARCHAR#),
		UPPER(#valcfg:VARCHAR#), UPPER(#descfg:VARCHAR#) )
	</insert>

	<update id="updRegByCod" parameterClass="CfgVO">
		UPDATE fcn.fcncfg SET parcfg= UPPER(#parcfg:VARCHAR#),valcfg= UPPER(#valcfg:VARCHAR#),descfg= UPPER(#descfg:VARCHAR#) WHERE
		iddcfg = #iddcfg:NUMERIC#
	</update>
	
	<delete id="delByCod" parameterClass="Long">
		DELETE FROM fcn.fcncfg WHERE iddcfg = #value:NUMERIC#
	</delete>
	
	<delete id="delByCodigos" parameterClass="String">
		DELETE FROM fcn.fcncfg WHERE iddcfg in ($value$)
	</delete>

	<select id="getCountByCriterio" parameterClass="CfgVO" resultClass="Integer">
		SELECT count(iddcfg) FROM fcn.fcncfg
		<dynamic prepend=" WHERE ">
			<isNotNull property="iddcfg" prepend=" AND "> iddcfg = #iddcfg:NUMERIC#
			</isNotNull>
			<isNotNull property="parcfg" prepend=" AND ">
				parcfg ILIKE '%' || #parcfg:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="valcfg" prepend=" AND ">
				valcfg ILIKE '%' || #valcfg:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="descfg" prepend=" AND ">
				descfg ILIKE '%' || #descfg:VARCHAR# || '%'
			</isNotNull>
		</dynamic>
	</select>
	
	<select id="getValorByParam" parameterClass="String" resultClass="String">
		select VALCFG from fcn.fcncfg 
		WHERE PARCFG = #value:VARCHAR#
	</select>
	
	<select id="getAcaoImportacao" resultClass="hashmap">
		select (select case when valcfg = '1' then true else false end as gv 
		from fcn.fcncfg
		where parcfg = 'GRAVA_VIABILIDADE'), 
		(select case when valcfg = '1' then true else false end as rv  
		from fcn.fcncfg
		where parcfg = 'RESPONDE_VIABILIDADE'),
		(select case when valcfg = '1' then true else false end as ge  
		from fcn.fcncfg
		where parcfg = 'GRAVA_EMPREENDIMENTO'),
		(select case when valcfg = '1' then true else false end as re  
		from fcn.fcncfg
		where parcfg = 'RESPONDE_EMPREENDIMENTO')
	</select>
	
	<update id="updValByPar" parameterClass="hashmap">
		UPDATE 
			fcn.fcncfg
		SET 
			valcfg = #valcfg:VARCHAR#
		WHERE 
			parcfg = #parcfg:VARCHAR#
	</update>
	
	<select id="getAtualizacoesSistema" resultClass="hashmap">
		select 
			to_char(atu.datatu, 'dd/MM/yyyy') as datatu, atu.desatu 
		from 
			public.fcnatu atu
		order by 
			atu.datatu desc
		limit 10
	</select>
	
</sqlMap> 
 