<?xml version="1.0" encoding="UTF-8"?> 
 <!DOCTYPE sqlMap PUBLIC "//iBATIS.com//DTD SQL Map 2.0//EN" "HTTP://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="Uso">
	<typeAlias alias="UsoVO" type="pmcg.fcn.domain.UsoVO" />

	<resultMap id="mapComplexQuerySimple" class="UsoVO">
		<result property="idduso" column="idduso" />
		<result property="coduso" column="coduso" />
		<result property="desuso" column="desuso" />
		<result property="orduso" column="orduso" />
		<result property="usualt" column="usualt" />
		<result property="datalt" column="datalt" />
		<result property="atvuso" column="atvuso" />
		<result property="poruso" column="poruso" />
		<result property="decuso" column="decuso" />
	</resultMap>

	<resultMap id="mapComplexQuery" class="UsoVO">
		<result property="idduso" column="idduso" />
		<result property="coduso" column="coduso" />
		<result property="desuso" column="desuso" />
		<result property="orduso" column="orduso" />
		<result property="usualt" column="usualt" />
		<result property="datalt" column="datalt" />
		<result property="atvuso" column="atvuso" />
		<result property="poruso" column="poruso" />
		<result property="decuso" column="decuso" />
	</resultMap>

	<select id="getRegByCod" parameterClass="Long" resultMap="mapComplexQuerySimple">
		SELECT * FROM fcn.fcnuso WHERE idduso = #value:NUMERIC#
	</select>

	<select id="getRegByCodComplex" parameterClass="Long" resultMap="mapComplexQuery">
		SELECT * FROM fcn.fcnuso WHERE idduso = #value:NUMERIC#
	</select>

	<select id="getRegByCriterio" parameterClass="UsoVO" resultMap="mapComplexQuerySimple">
		SELECT * FROM fcn.fcnuso
		<dynamic prepend=" WHERE ">
			<isNotNull property="idduso" prepend=" AND ">
				idduso = #idduso:NUMERIC#
			</isNotNull>
			<isNotNull property="coduso" prepend=" AND ">
				coduso ILIKE '%' || #coduso:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="desuso" prepend=" AND ">
				desuso ILIKE '%' || #desuso:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="orduso" prepend=" AND ">
				orduso = #orduso:NUMERIC#
			</isNotNull>
			<isNotNull property="usualt" prepend=" AND ">
				usualt ILIKE '%' || #usualt:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="datalt" prepend=" AND "> to_char(datalt,'dd/MM/yyyy') =
				to_char(#datalt:TIMESTAMP#,'dd/MM/yyyy')
			</isNotNull>
			<isNotNull property="atvuso" prepend=" AND "> atvuso = #atvuso#
			</isNotNull>
		</dynamic>
	</select>

	<select id="getRegByCriterioComplex" parameterClass="UsoVO" resultMap="mapComplexQuery">
		SELECT * FROM fcn.fcnuso
		<dynamic prepend=" WHERE ">
			<isNotNull property="idduso" prepend=" AND "> idduso = #idduso:NUMERIC#
			</isNotNull>
			<isNotNull property="coduso" prepend=" AND ">
				coduso ILIKE '%' || #coduso:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="desuso" prepend=" AND ">
				desuso ILIKE '%' || #desuso:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="orduso" prepend=" AND "> orduso = #orduso:NUMERIC#
			</isNotNull>
			<isNotNull property="usualt" prepend=" AND ">
				usualt ILIKE '%' || #usualt:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="datalt" prepend=" AND "> to_char(datalt,'dd/MM/yyyy') =
				to_char(#datalt:TIMESTAMP#,'dd/MM/yyyy')
			</isNotNull>
			<isNotNull property="atvuso" prepend=" AND "> atvuso = #atvuso#
			</isNotNull>
		</dynamic>
	</select>

	<select id="getTodos" resultMap="mapComplexQuerySimple">
		SELECT * FROM fcn.fcnuso U
	    ORDER BY substr(U.coduso,1,1),LENGTH(U.coduso),U.coduso
	</select>

	<insert id="insReg" parameterClass="UsoVO">
		<selectKey keyProperty="idduso" resultClass="Long">
			SELECT NEXTVAL('fcn.sequso')
		</selectKey>
		INSERT INTO fcn.fcnuso(idduso,coduso,desuso,orduso,usualt,datalt,atvuso) VALUES (#idduso:NUMERIC#,
		UPPER(#coduso:VARCHAR#), UPPER(#desuso:VARCHAR#),#orduso:NUMERIC#, UPPER(#usualt:VARCHAR#),now(),#atvuso# )
	</insert>

	<update id="updRegByCod" parameterClass="UsoVO">
		UPDATE fcn.fcnuso SET coduso= UPPER(#coduso:VARCHAR#),desuso= UPPER(#desuso:VARCHAR#),orduso= #orduso:NUMERIC#,usualt=
		UPPER(#usualt:VARCHAR#),datalt= now(),atvuso= #atvuso# WHERE idduso = #idduso:NUMERIC#
	</update>
	
	<delete id="delByCod" parameterClass="Long">
		DELETE FROM fcn.fcnuso WHERE idduso = #value:NUMERIC#
	</delete>
	
	<delete id="delByCodigos" parameterClass="String">
		DELETE FROM fcn.fcnuso WHERE idduso in ($value$)
	</delete>

	<select id="getCountByCriterio" parameterClass="UsoVO" resultClass="Integer">
		SELECT count(idduso) FROM fcn.fcnuso
		<dynamic prepend=" WHERE ">
			<isNotNull property="idduso" prepend=" AND "> idduso = #idduso:NUMERIC#
			</isNotNull>
			<isNotNull property="coduso" prepend=" AND ">
				coduso ILIKE '%' || #coduso:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="desuso" prepend=" AND ">
				desuso ILIKE '%' || #desuso:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="orduso" prepend=" AND "> orduso = #orduso:NUMERIC#
			</isNotNull>
			<isNotNull property="usualt" prepend=" AND ">
				usualt ILIKE '%' || #usualt:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="datalt" prepend=" AND "> to_char(datalt,'dd/MM/yyyy') =
				to_char(#datalt:TIMESTAMP#,'dd/MM/yyyy')
			</isNotNull>
			<isNotNull property="atvuso" prepend=" AND "> atvuso = #atvuso#
			</isNotNull>
		</dynamic>
	</select>
	
	<select id="getUsosByZonas" parameterClass="String" resultMap="mapComplexQuery">
		SELECT * FROM fcn.fcnuso U
	    WHERE U.coduso IN
		    (SELECT DISTINCT(usozus) AS coduso FROM fcn.fcnzus Z
				WHERE Z.zonzus IN ($value$))
	    ORDER BY substr(U.coduso,1,1),LENGTH(U.coduso),U.coduso
	</select>
	
	<select id="getUsosByAtv" parameterClass="String" resultClass="String">
		select fcn.retorna_usos_por_atv(#value:VARCHAR#)
	</select>
	
	<select id="getUsosIn" parameterClass="String" resultMap="mapComplexQuery">
		SELECT * FROM fcn.fcnuso U
	    WHERE U.coduso IN ($value$)
	    ORDER BY substr(U.coduso,1,1),LENGTH(U.coduso),U.coduso
	</select>
	
	<select id="getUsoByAtvPorte" parameterClass="hashmap" resultMap="mapComplexQuery">
		select * from fcn.fcnuso where coduso like (select fcn.retorna_uso_por_atv_porte(#cnae:VARCHAR#, #area:NUMERIC#))
	</select>
	
	<select id="getZonasUsosByInscricao" parameterClass="String" resultClass="Hashmap">
		select fcn.retorna_zonas_por_inscricao(#value:VARCHAR#) as zonas, fcn.retorna_usos_por_inscricao(#value:VARCHAR#) as usos, 
		'''' || replace(fcn.retorna_zonas_por_inscricao(#value:VARCHAR#),',',''',''') || '''' as zonasparabusca, 
		case when (select count(0) from fcn.fcnzim where imozim = #value:VARCHAR# and zonzim like 'C3') > 0 then true else false end as temc3
	</select>
</sqlMap> 
 