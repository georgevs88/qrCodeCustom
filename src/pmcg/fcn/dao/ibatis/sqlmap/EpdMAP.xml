<?xml version="1.0" encoding="UTF-8"?> 
 <!DOCTYPE sqlMap PUBLIC "//iBATIS.com//DTD SQL Map 2.0//EN" "HTTP://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="Epd">
	<typeAlias alias="EpdVO" type="pmcg.fcn.domain.EpdVO" />

	<resultMap id="mapComplexQuerySimple" class="EpdVO">
		<result property="iddepd" column="iddepd" />
		<result property="nprepd" column="nprepd" />
		<result property="nirepd" column="nirepd" />
		<result property="dgnepd" column="dgnepd" />
		<result property="cnpepd" column="cnpepd" />
		<result property="dgcepd" column="dgcepd" />
		<result property="proepd" column="proepd" />
		<result property="datepd" column="datepd" />
		<result property="creepd" column="creepd" />
		<result property="caiepd" column="caiepd" />
		<result property="ateepd" column="ateepd" />
		<result property="usuepd" column="usuepd" />
		<result property="daeepd" column="daeepd" />
		<result property="msgepd" column="msgepd" />
		<result property="mgcepd" column="mgcepd" />
		<result property="lmaepd" column="lmaepd" />
		<result property="lvsepd" column="lvsepd" />
		<result property="tpeepd" column="tpeepd" />
	</resultMap>

	<resultMap id="mapComplexQuery" class="EpdVO">
		<result property="iddepd" column="iddepd" />
		<result property="nprepd" column="nprepd" />
		<result property="nirepd" column="nirepd" />
		<result property="dgnepd" column="dgnepd" />
		<result property="cnpepd" column="cnpepd" />
		<result property="dgcepd" column="dgcepd" />
		<result property="proepd" column="proepd" />
		<result property="datepd" column="datepd" />
		<result property="creepd" column="creepd" />
		<result property="caiepd" column="caiepd" />
		<result property="ateepd" column="ateepd" />
		<result property="usuepd" column="usuepd" />
		<result property="daeepd" column="daeepd" />
		<result property="msgepd" column="msgepd" />
		<result property="mgcepd" column="mgcepd" />
		<result property="lmaepd" column="lmaepd" />
		<result property="lvsepd" column="lvsepd" />
		<result property="tpeepd" column="tpeepd" />
		
		<result property="processo.iddpro" column="iddpro" />
		<result property="processo.atopro" column="atopro" />
	</resultMap>

	<select id="getRegByCod" parameterClass="Long" resultMap="mapComplexQuerySimple">
		SELECT * FROM fcn.fcnepd WHERE iddepd = #value:NUMERIC#
	</select>

	<select id="getRegByCodComplex" parameterClass="Long" resultMap="mapComplexQuery">
		SELECT 
			epd.*, pro.iddpro, pro.atopro
		FROM 
			fcn.fcnepd epd 
			join fcn.fcnpro pro on pro.iddpro = epd.proepd
		WHERE 
			iddepd = #value:NUMERIC#
	</select>

	<select id="getRegByCriterio" parameterClass="EpdVO" resultMap="mapComplexQuerySimple">
		SELECT * FROM fcn.fcnepd
		<dynamic prepend=" WHERE ">
			<isNotNull property="iddepd" prepend=" AND ">
				iddepd = #iddepd:NUMERIC#
			</isNotNull>
			<isNotNull property="nprepd" prepend=" AND ">
				nprepd ILIKE '%' || #nprepd:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="nirepd" prepend=" AND ">
				nirepd ILIKE '%' || #nirepd:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="dgnepd" prepend=" AND ">
				to_char(dgnepd,'dd/MM/yyyy') =
				to_char(#dgnepd:TIMESTAMP#,'dd/MM/yyyy')
			</isNotNull>
			<isNotNull property="cnpepd" prepend=" AND ">
				cnpepd ILIKE '%' || #cnpepd:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="dgcepd" prepend=" AND ">
				to_char(dgcepd,'dd/MM/yyyy') =
				to_char(#dgcepd:TIMESTAMP#,'dd/MM/yyyy')
			</isNotNull>
			<isNotNull property="proepd" prepend=" AND ">
				proepd = #proepd:NUMERIC#
			</isNotNull>
		</dynamic>
	</select>

	<select id="getRegByCriterioComplex" parameterClass="EpdVO" resultMap="mapComplexQuery">
		SELECT 
			epd.*, pro.iddpro, pro.atopro
		FROM 
			fcn.fcnepd epd 
			join fcn.fcnpro pro on pro.iddpro = epd.proepd
		<dynamic prepend=" WHERE ">
			<isNotNull property="iddepd" prepend=" AND "> iddepd =
				#iddepd:NUMERIC#
			</isNotNull>
			<isNotNull property="nprepd" prepend=" AND ">
				nprepd ILIKE '%' || #nprepd:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="nirepd" prepend=" AND ">
				nirepd ILIKE '%' || #nirepd:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="dgnepd" prepend=" AND ">
				to_char(dgnepd,'dd/MM/yyyy') =
				to_char(#dgnepd:TIMESTAMP#,'dd/MM/yyyy')
			</isNotNull>
			<isNotNull property="cnpepd" prepend=" AND ">
				cnpepd ILIKE '%' || #cnpepd:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="dgcepd" prepend=" AND ">
				to_char(dgcepd,'dd/MM/yyyy') =
				to_char(#dgcepd:TIMESTAMP#,'dd/MM/yyyy')
			</isNotNull>
			<isNotNull property="proepd" prepend=" AND "> proepd =
				#proepd:NUMERIC#
			</isNotNull>
		</dynamic>
	</select>

	<select id="getTodos" resultMap="mapComplexQuerySimple">
		SELECT * FROM fcn.fcnepd
	</select>

	<insert id="insReg" parameterClass="EpdVO">
		<selectKey keyProperty="iddepd" resultClass="Long">
			SELECT NEXTVAL('fcn.seqepd')
		</selectKey>
		INSERT INTO fcn.fcnepd(iddepd,nprepd,nirepd,dgnepd,cnpepd,dgcepd,proepd, datepd, creepd, caiepd, ateepd, usuepd, daeepd, lmaepd, lvsepd, tpeepd)
		VALUES (#iddepd:NUMERIC#, UPPER(#nprepd:VARCHAR#),
		UPPER(#nirepd:VARCHAR#),#dgnepd:TIMESTAMP#,
		UPPER(#cnpepd:VARCHAR#),#dgcepd:TIMESTAMP#,#proepd:NUMERIC#, now(), #creepd:VARCHAR#, #caiepd:NUMERIC#, #ateepd:BOOLEAN#, 
		#usuepd:VARCHAR#, #daeepd:TIMESTAMP#, #lmaepd:NUMERIC#, #lvsepd:NUMERIC#,#tpeepd:VARCHAR#)
	</insert>

	<update id="updRegByCod" parameterClass="EpdVO">
		UPDATE 
			fcn.fcnepd 
		SET 
			nprepd = UPPER(#nprepd:VARCHAR#),
			nirepd = UPPER(#nirepd:VARCHAR#),
			dgnepd = #dgnepd:TIMESTAMP#,
			cnpepd = UPPER(#cnpepd:VARCHAR#),
			dgcepd = #dgcepd:TIMESTAMP#,
			proepd = #proepd:NUMERIC#,
			creepd = #creepd:VARCHAR#, 
			caiepd = #caiepd:NUMERIC#,
			ateepd = #ateepd:BOOLEAN#,
			usuepd = #usuepd:VARCHAR#, 
			daeepd = #daeepd:TIMESTAMP#,
			lmaepd = #lmaepd:NUMERIC#,
			lvsepd = #lvsepd:NUMERIC#,
			tpeepd = #tpeepd:VARCHAR#
		WHERE 
			iddepd = #iddepd:NUMERIC#
	</update>
	
	<delete id="delByCod" parameterClass="Long">
		DELETE FROM fcn.fcnepd WHERE iddepd = #value:NUMERIC#
	</delete>
	
	<delete id="delByCodigos" parameterClass="String">
		DELETE FROM fcn.fcnepd WHERE iddepd in ($value$)
	</delete>

	<select id="getCountByCriterio" parameterClass="EpdVO"
		resultClass="Integer">
		SELECT count(iddepd) FROM fcn.fcnepd
		<dynamic prepend=" WHERE ">
			<isNotNull property="iddepd" prepend=" AND "> iddepd =
				#iddepd:NUMERIC#
			</isNotNull>
			<isNotNull property="nprepd" prepend=" AND ">
				nprepd ILIKE '%' || #nprepd:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="nirepd" prepend=" AND ">
				nirepd ILIKE '%' || #nirepd:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="dgnepd" prepend=" AND ">
				to_char(dgnepd,'dd/MM/yyyy') =
				to_char(#dgnepd:TIMESTAMP#,'dd/MM/yyyy')
			</isNotNull>
			<isNotNull property="cnpepd" prepend=" AND ">
				cnpepd ILIKE '%' || #cnpepd:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="dgcepd" prepend=" AND ">
				to_char(dgcepd,'dd/MM/yyyy') =
				to_char(#dgcepd:TIMESTAMP#,'dd/MM/yyyy')
			</isNotNull>
			<isNotNull property="proepd" prepend=" AND "> proepd =
				#proepd:NUMERIC#
			</isNotNull>
		</dynamic>
	</select>
	
	<select id="getRegByProcesso" parameterClass="String" resultMap="mapComplexQuery">
		SELECT 
			epd.*, pro.iddpro, pro.atopro
		FROM 
			fcn.fcnepd epd 
			join fcn.fcnpro pro on pro.iddpro = epd.proepd
		where 
			epd.nprepd = #value:VARCHAR#
		order by 
			datepd desc
		limit 1
	</select>
	
	<update id="updConfRecebimentoByProcesso" parameterClass="String">
		update 
			fcn.fcnepd 
		set 
			creepd = 'S' 
		where 
			nprepd = #value:VARCHAR#
	</update>
	
	<select id="getEpdGravados" parameterClass="hashmap" resultClass="hashmap">
		select 
			epd.iddepd, epd.nprepd, 'Viabilidade: ' || mat.pvimat as pvimat, epd.nirepd, epd.cnpepd, to_char(epd.datepd, 'dd/MM/yyyy') as datepd, case when epd.creepd like 'S' then 'SIM' else 'NAO' end as creepd,
			case when epd.creepd like 'S' then 'font-weight:bold;color:rgb(31,181,47);' else 'font-weight:bold;color:rgb(197,29,29);' end as styleconfrec,
			case when epd.creepd like 'S' then false else true end as visibleconfrec,
			case when cai.sitcai is null then 
			   '-' 
			else
			   case when cai.sitcai like 'D' then 
			      'DEFERIDO' 
			   else 
			      case when cai.sitcai like 'E' then 
			         'EM EXIGENCIA' 
			      else 
			         case when cai.sitcai like 'I' then 
					 'INDEFERIDO' 
				      else 
					 'PARCIALMENTE'
				      end 
			      end 
			   end
			end as sitcai, 
			case when (cai.sitcai is not null and cai.sitcai like 'D') then 
			   'font-weight:bold;color:rgb(31,181,47);' 
			else 
			   case when (cai.sitcai is not null and cai.sitcai like 'I') then 
			      'font-weight:bold;color:rgb(197,29,29);' 
			   else 
			      'font-weight:bold;color:rgb(198,215,3);' 
			   end
			end as style, 
			case when (epd.ateepd = false and (pro.atopro = '080' or pro.atopro = '090' or pro.atopro = '091' or pro.atopro = '005') and epd.caiepd is null) then true else false end as visibleanalise,
			'Requerente: ' || req.nomreq as requerente, ato.codato || '-' || ato.desato as atopro, evt.desevt, 
			mat.nommat || case when mat.nfamat is not null then ' (' || mat.nfamat || ')' else '' end as rzsfan, epd.msgepd
		from 
			fcn.fcnepd epd
			join fcn.fcnpro pro on pro.iddpro = epd.proepd
			join fcn.fcnmat mat on mat.promat = pro.iddpro
			join fcn.fcnreq req on pro.reqpro = req.iddreq
			left join fcn.fcnato ato on ato.codato = pro.atopro
			left join fcn.fcneev eev on eev.proeev = pro.iddpro
			left join fcn.fcnevt evt on eev.eveeev = evt.codevt
			left join fcn.fcncai cai on epd.caiepd = cai.iddcai
		<dynamic prepend=" WHERE ">
        	<isNotNull property="nprepd" prepend=" AND ">
				epd.nprepd ILIKE '%' || #nprepd:VARCHAR# || '%'
			</isNotNull>
			<isEqual property="alteracoespendentes" compareValue="true" prepend="AND">
				pro.atopro not in ('080','090','091','005')
       			and ateepd = false
			</isEqual>
			<isEqual property="inscricoespendentes" compareValue="true" prepend="AND">
				pro.atopro in ('080','090','091','005')
				and caiepd is null
       			and ateepd = false
			</isEqual>
		</dynamic>
		order by 
			epd.datepd desc
	</select>
	
	<select id="countEpdGravados" parameterClass="hashmap" resultClass="Integer">
		select 
			count(0)
		from 
			fcn.fcnepd epd
			join fcn.fcnpro pro on pro.iddpro = epd.proepd
			join fcn.fcnmat mat on mat.promat = pro.iddpro
			join fcn.fcnreq req on pro.reqpro = req.iddreq
			left join fcn.fcnato ato on ato.codato = pro.atopro
			left join fcn.fcneev eev on eev.proeev = pro.iddpro
			left join fcn.fcnevt evt on eev.eveeev = evt.codevt
			left join fcn.fcncai cai on epd.caiepd = cai.iddcai
		<dynamic prepend=" WHERE ">
        	<isNotNull property="nprepd" prepend=" AND ">
				epd.nprepd ILIKE '%' || #nprepd:VARCHAR# || '%'
			</isNotNull>
			<isEqual property="alteracoespendentes" compareValue="true" prepend="AND">
				pro.atopro not in ('080','090','091','005')
       			and ateepd = false
			</isEqual>
			<isEqual property="inscricoespendentes" compareValue="true" prepend="AND">
				pro.atopro in ('080','090','091','005')
				and caiepd is null
       			and ateepd = false
			</isEqual>
		</dynamic>
	</select>
	
	<select id="getEpdPendente" parameterClass="hashmap" resultMap="mapComplexQuery">
		SELECT 
			epd.*, pro.iddpro, pro.atopro
		FROM 
			fcn.fcnepd epd 
			join fcn.fcnpro pro on pro.iddpro = epd.proepd
		<dynamic prepend=" WHERE ">
			<isEqual property="confirmacaopendente" compareValue="true" prepend="AND">
        		atopro in ('080','090','091')
        		and epd.caiepd is not null
	            and epd.caiepd > 0
	            and epd.ateepd = false
			</isEqual>
			<isEqual property="respostapendente" compareValue="true" prepend="AND">
				atopro in ('080','090','091')
				and epd.caiepd is null
				and epd.creepd like 'S'
			</isEqual>
		</dynamic>
	</select>
	
	<select id="getInscricaoByProcesso" parameterClass="String" resultClass="String">
		SELECT cen.iptcen FROM fcn.fcnepd epd
		join fcn.fcnpro pro on pro.iddpro = epd.proepd 
		join fcn.fcnmat mat on mat.promat = pro.iddpro
		join fcn.fcnvia via on via.provia like pvimat
		join fcn.fcncol col on via.colvia = col.iddcol
		join fcn.fcncen cen on col.cencol = cen.iddcen
		where epd.nprepd like #value:VARCHAR#
	</select>
	
	<select id="countEpdByProcesso" parameterClass="String" resultClass="Integer">
		select 
			count(iddepd) 
		from 
			fcn.fcnepd epd 
		where 
			epd.nprepd = #value:VARCHAR#
	</select>
	
	<update id="updConfirmaInscricaoByIdd" parameterClass="EpdVO">
		update 
			fcn.fcnepd 
		set 
			caiepd = #caiepd:NUMERIC# 
		where 
			iddepd = #iddepd:NUMERIC#
	</update>
	
	<select id="getRiscoByProcesso" parameterClass="String" resultClass="String">
		select aen.risaen from fcn.fcnepd epd 
		join fcn.fcnpro pro on pro.iddpro = epd.proepd
		join fcn.fcnmat mat on mat.promat = pro.iddpro
		join fcn.fcnvia via on via.provia = mat.pvimat
		join fcn.fcnaen aen on aen.iddaen = via.aenvia
		where epd.nprepd = #value:VARCHAR#
	</select>
	
	<select id="getQlfByNjrCondi" parameterClass="hashmap" resultClass="String">
		select public.retorna_qlf_por_njr_condi(#njr:VARCHAR#, #condi:NUMERIC#)
	</select>
	
	<update id="updAtendidoByProcesso" parameterClass="String">
		update 
			fcn.fcnepd 
		set 
			ateepd = true
		where 
			nprepd = #value:VARCHAR#
	</update>
	
	<select id="getEpdLimit" parameterClass="hashmap" resultClass="hashmap">
		select 
			epd.*, pro.iddpro, case when epd.cnpepd is not null then fcn.formatacpfcnpj(epd.cnpepd) else '-' end as cnpj,
			mat.pvimat, cen.iptcen, mat.nommat, mat.nfamat, mat.nommat || case when mat.nfamat is not null then ' (' || mat.nfamat || ')' else '' end as nome,
			case when epd.nirepd is not null then epd.nirepd else '-' end as nire,
			req.nomreq, njr.codnjr, njr.desnjr, njr.codnjr || ' - ' || njr.desnjr as natjur,
            pro.atopro, tab.destab as ato, case when cai.sitcai = 'P' then 'Parcialmente Deferido' else 
            'Deferido' end as sitcai, cai.imucai, to_char(cai.datcai, 'dd/MM/yyyy') as datcai,
            case when epd.caiepd is not null then true else false end as temcai, 
            case when lma.iddlma is not null or lvs.iddlvs is not null then true else false end as temlic,
            case when lma.iddlma is not null then true else false end as temlicMA,
            case when lvs.iddlvs is not null then true else false end as temlicVS,  
            formatInterval(now()-datepd) as qtddias
        from 
			fcn.fcnepd epd 
			join fcn.fcnpro pro on pro.iddpro = epd.proepd
			join fcn.fcntab tab on (tab.tabtab = 'ATO' and tab.codtab = pro.atopro)
			join fcn.fcnmat mat on mat.promat = pro.iddpro
			left join fcn.fcnvia via on via.provia = mat.pvimat
			left join fcn.fcncol col on col.iddcol = via.colvia
			left join fcn.fcncen cen on cen.iddcen = col.cencol
			join fcn.fcnreq req on req.iddreq = pro.reqpro
			join public.fcnnjr njr on njr.codnjr = pro.njrpro
			left join fcn.fcncai cai on cai.iddcai = epd.caiepd
			left join lic.liclma lma on lma.iddlma = epd.lmaepd
			left join lic.liclvs lvs on lvs.iddlvs = epd.lvsepd
		<dynamic prepend=" WHERE ">
        	<isNotNull property="nprepd" prepend=" AND ">
				epd.nprepd ILIKE '%' || #nprepd:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="cnpepd" prepend=" AND ">
				epd.cnpepd ILIKE '%' || #cnpepd:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="nirepd" prepend=" AND ">
				epd.nirepd ILIKE '%' || #nirepd:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="nommat" prepend=" AND ">
				mat.nommat ILIKE '%' || #nommat:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="pvimat" prepend=" AND ">
				mat.pvimat ILIKE '%' || #pvimat:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="iptcen" prepend=" AND ">
				cen.iptcen ILIKE '%' || #iptcen:VARCHAR# || '%'
			</isNotNull>
			<isEqual property="alteracoespendentes" compareValue="true" prepend="AND">
				pro.atopro not in ('080','090','091','005')
       			and ateepd = false
			</isEqual>
		</dynamic>
		ORDER BY
			<isNotNull property="alteracoespendentes">
				epd.datepd
			</isNotNull>
			<isNull property="alteracoespendentes">
				epd.datepd desc
			</isNull>
	</select>
	
	<select id="countEpd" parameterClass="hashmap" resultClass="Integer">
		select 
			count(0) 
		from 
			fcn.fcnepd epd 
			join fcn.fcnpro pro on pro.iddpro = epd.proepd
			join fcn.fcnmat mat on mat.promat = pro.iddpro
			left join fcn.fcnvia via on via.provia = mat.pvimat
			left join fcn.fcncol col on col.iddcol = via.colvia
			left join fcn.fcncen cen on cen.iddcen = col.cencol
        <dynamic prepend=" WHERE ">
        	<isNotNull property="nprepd" prepend=" AND ">
				epd.nprepd ILIKE '%' || #nprepd:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="cnpepd" prepend=" AND ">
				epd.cnpepd ILIKE '%' || #cnpepd:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="nirepd" prepend=" AND ">
				epd.nirepd ILIKE '%' || #nirepd:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="nommat" prepend=" AND ">
				mat.nommat ILIKE '%' || #nommat:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="pvimat" prepend=" AND ">
				mat.pvimat ILIKE '%' || #pvimat:VARCHAR# || '%'
			</isNotNull>
			<isNotNull property="iptcen" prepend=" AND ">
				cen.iptcen ILIKE '%' || #iptcen:VARCHAR# || '%'
			</isNotNull>
			<isEqual property="alteracoespendentes" compareValue="true" prepend="AND">
				pro.atopro not in ('080','090','091','005')
       			and ateepd = false
			</isEqual>
		</dynamic>
	</select>
	
	<update id="updAtendimento" parameterClass="EpdVO">
		update 
			fcn.fcnepd 
		set 
			ateepd = true,
			usuepd = #usuepd:VARCHAR#,
			daeepd = now()
		where 
			iddepd = #iddepd:NUMERIC#
	</update>
	
	<update id="updMensagemSIAT" parameterClass="EpdVO">
		update 
			fcn.fcnepd 
		set 
			msgepd = #msgepd:VARCHAR#
		where 
			iddepd = #iddepd:NUMERIC#
	</update>
	
	<update id="updMensagemConfRec" parameterClass="EpdVO">
		update 
			fcn.fcnepd 
		set 
			mgcepd = #mgcepd:VARCHAR#
		where 
			iddepd = #iddepd:NUMERIC#
	</update>
	
	<select id="getEpdByConfRecPendente" resultClass="EpdVO">
		SELECT 
			* 
		FROM 
			fcn.fcnepd f 
		WHERE 
			f.creepd = 'N'
	</select>
	
	<select id="getQtdViaEpd" resultClass="hashmap" parameterClass="String">
		select 
			to_char(v.datvia,'MM/yyyy') competencia, count(0) as qtdvia, fcn.getQtdEpdComp(to_char(v.datvia,'MM/yyyy')) as qtdepd
		from 
			fcn.fcnvia v
		where
			to_char(v.datvia,'yyyy') = #value:VARCHAR#
		group by 1
		order by 1
	</select>
	
	<select id="getQtdViaEpdMes" resultClass="hashmap" parameterClass="String">
		select 
			to_char(v.datvia,'dd/MM/yyyy') competencia, count(0) as qtdvia, fcn.getQtdEpdComp(to_char(v.datvia,'dd/MM/yyyy')) as qtdepd
		from 
			fcn.fcnvia v
		where
			to_char(v.datvia,'MM/yyyy') = #value:VARCHAR#
		group by 1
		order by 1
	</select>
	
	<select id="getGraficoAteEpd" resultClass="hashmap" parameterClass="String">
		select 
			to_char(datepd, 'MM/yyyy') as competencia, count(0) as qtdepd, sum(case when ateepd then 1 else 0 end) as qtdate
		from 
			fcn.fcnepd epd
			join fcn.fcnpro pro on pro.iddpro = epd.proepd
		where 
			pro.atopro = '002'
			and to_char(datepd, 'yyyy') = #value:VARCHAR#
		group by 1
		order by 1
	</select>
	
	<select id="getGraficoAteEpdMes" resultClass="hashmap" parameterClass="String">
		select 
			to_char(datepd, 'dd/MM/yyyy') as competencia, count(0) as qtdepd, sum(case when ateepd then 1 else 0 end) as qtdate
		from 
			fcn.fcnepd epd
			join fcn.fcnpro pro on pro.iddpro = epd.proepd
		where 
			pro.atopro = '002'
			and to_char(datepd, 'MM/yyyy') = #value:VARCHAR#
		group by 1
		order by 1
	</select>
	
	<select id="getDadosInsmun" resultClass="hashmap" parameterClass="hashmap">
		select 
			e.iddepd
			, p.iddpro, r.emareq, e.nprepd, fcn.formatacpfcnpj(case when e.cnpepd is not null then e.cnpepd else m.cnpmat end) as cpfcnpj,
			m.nommat as nomraz, substr(c.imucai,1,10) || '-' || substr(c.imucai,11,1) as insmun, v.provia, aen.ambaen, aen.vigaen,
			case when aen.ambaen = 'B' then 'BAIXO' when aen.ambaen = 'M' then 'MEDIO' else 'ALTO' END AS risamb,
			case when aen.ambaen = 'B' then '/images/externo/green.png' when aen.ambaen = 'M' then '/images/externo/yellow.png' else '/images/externo/red.png' END AS imgamb,
			case when aen.vigaen = 'B' then 'BAIXO' when aen.vigaen = 'M' then 'MEDIO' else 'ALTO' END AS risvig,
			case when aen.vigaen = 'B' then '/images/externo/green.png' when aen.vigaen = 'M' then '/images/externo/yellow.png' else '/images/externo/red.png' END AS imgvig,
			lmaepd, lvsepd, vesepd
		from 
			fcn.fcnepd e
			join fcn.fcnpro p on p.iddpro = e.proepd
			join fcn.fcnreq r on r.iddreq = p.reqpro
			join fcn.fcnmat m on m.promat = p.iddpro
			join fcn.fcncai c on c.iddcai = e.caiepd
			join fcn.fcnvia v on v.provia = m.pvimat
			join fcn.fcnaen aen on aen.iddaen = v.aenvia
		where 
			e.nprepd = #nprepd:VARCHAR#
			<isNotNull property="imucai" prepend=" AND ">
				c.imucai = #imucai:VARCHAR#
			</isNotNull>
	</select>
	
	<update id="updLicencaAmb" parameterClass="EpdVO">
		update 
			fcn.fcnepd 
		set 
			lmaepd = #lmaepd:NUMERIC#
		where 
			iddepd = #iddepd:NUMERIC#
	</update>
	
	<update id="updLicencaVig" parameterClass="EpdVO">
		update 
			fcn.fcnepd 
		set 
			lvsepd = #lvsepd:NUMERIC#
		where 
			iddepd = #iddepd:NUMERIC#
	</update>
	
	<update id="updEpdSosweb" parameterClass="EpdVO">
		update 
			fcn.fcnepd 
		set 
			vesepd = #vesepd:NUMERIC#
		where 
			iddepd = #iddepd:NUMERIC#
	</update>
</sqlMap> 
 